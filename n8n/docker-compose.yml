version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n_password_change_me
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=n8n_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U n8n -d n8n']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network

  # Redis for Queue Mode (optional but recommended for production)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network

  # n8n Main Instance
  n8n:
    # Use custom Dockerfile or official image
    # build: .
    image: n8nio/n8n:latest
    restart: unless-stopped
    environment:
      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password_change_me
      
      # Redis Configuration (for queue mode)
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - EXECUTIONS_MODE=queue
      
      # Security
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=change_me_secure_password
      
      # General Configuration
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      
      # Encryption key (generate with: openssl rand -base64 32)
      - N8N_ENCRYPTION_KEY=your_encryption_key_here_generate_with_openssl
      
      # Timezone
      - GENERIC_TIMEZONE=UTC
      - TZ=UTC
      
      # Node.js options
      - NODE_OPTIONS=--max-old-space-size=2048
      
      # Enable metrics (optional)
      - N8N_METRICS=false
      
      # Custom nodes path
      - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n/custom
      
      # File system permissions
      - N8N_USER_FOLDER=/home/node/.n8n
      
      # Disable version notifications
      - N8N_VERSION_NOTIFICATIONS_ENABLED=false
      
      # Log level
      - N8N_LOG_LEVEL=info
      
      # Workflow execution timeout
      - EXECUTIONS_TIMEOUT=3600
      - EXECUTIONS_TIMEOUT_MAX=7200
      
      # Enable workflow history
      - N8N_WORKFLOW_HISTORY_ENABLED=true
      
      # Community packages (allow installation of community nodes)
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      # Mount custom nodes directory
      - ./custom-nodes:/home/node/.n8n/custom
      # Mount for local files workflow access
      - ./shared:/tmp/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - n8n-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:5678/healthz || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # n8n Worker (for queue mode - optional but recommended for production)
  n8n-worker:
    # build: .
    image: n8nio/n8n:latest
    restart: unless-stopped
    command: worker
    environment:
      # Database Configuration (same as main instance)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_password_change_me
      
      # Redis Configuration
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - EXECUTIONS_MODE=queue
      
      # Encryption key (must match main instance)
      - N8N_ENCRYPTION_KEY=your_encryption_key_here_generate_with_openssl
      
      # Timezone
      - GENERIC_TIMEZONE=UTC
      - TZ=UTC
      
      # Node.js options
      - NODE_OPTIONS=--max-old-space-size=2048
      
      # Custom nodes path
      - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n/custom
      
      # Log level
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data:/home/node/.n8n
      - ./custom-nodes:/home/node/.n8n/custom
      - ./shared:/tmp/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n:
        condition: service_healthy
    networks:
      - n8n-network
    deploy:
      replicas: 2  # Scale based on your needs

  # Nginx Reverse Proxy (optional but recommended for production)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - n8n
    networks:
      - n8n-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  n8n-network:
    driver: bridge